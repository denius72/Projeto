-- MySQL Script generated by MySQL Workbench
-- Tue 19 Sep 2017 06:45:32 PM BRT
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`EmissorRG`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`EmissorRG` ;

CREATE TABLE IF NOT EXISTS `mydb`.`EmissorRG` (
  `idEmissorRG` INT NOT NULL AUTO_INCREMENT,
  `SSP` CHAR(2) NOT NULL,
  PRIMARY KEY (`idEmissorRG`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pais`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Pais` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Pais` (
  `idPais` INT NOT NULL AUTO_INCREMENT,
  `NomePais` VARCHAR(100) NOT NULL,
  `SiglaPais` CHAR(2) NOT NULL,
  PRIMARY KEY (`idPais`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Estado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Estado` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Estado` (
  `idEstado` INT NOT NULL AUTO_INCREMENT,
  `NomeEstado` VARCHAR(100) NOT NULL,
  `SiglaEstado` VARCHAR(2) NOT NULL,
  `Pais_idPais` INT NOT NULL,
  PRIMARY KEY (`idEstado`),
  INDEX `fk_Estado_Pais1_idx` (`Pais_idPais` ASC),
  CONSTRAINT `fk_Estado_Pais1`
    FOREIGN KEY (`Pais_idPais`)
    REFERENCES `mydb`.`Pais` (`idPais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Cidade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Cidade` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Cidade` (
  `idCidade` INT NOT NULL AUTO_INCREMENT,
  `NomeCidade` VARCHAR(100) NULL,
  `Estado_idEstado` INT NOT NULL,
  PRIMARY KEY (`idCidade`),
  INDEX `fk_Cidade_Estado1_idx` (`Estado_idEstado` ASC),
  CONSTRAINT `fk_Cidade_Estado1`
    FOREIGN KEY (`Estado_idEstado`)
    REFERENCES `mydb`.`Estado` (`idEstado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pessoa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Pessoa` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Pessoa` (
  `idPessoa` INT NOT NULL AUTO_INCREMENT,
  `Nome` VARCHAR(200) NOT NULL,
  `DataNascimento` DATE NOT NULL,
  `RG` VARCHAR(15) NOT NULL,
  `idEmissorRG` INT NOT NULL,
  `CPF` CHAR(15) NOT NULL,
  `Sexo` VARCHAR(45) NOT NULL,
  `NomePai` VARCHAR(200) NULL,
  `NomeMae` VARCHAR(200) NOT NULL,
  `Passaporte` VARCHAR(50) NULL,
  `NaturalidadeID` INT NOT NULL,
  `Pessoa_idPessoa` INT NOT NULL,
  PRIMARY KEY (`idPessoa`),
  INDEX `fk_Pessoa_EmissorRG1_idx` (`idEmissorRG` ASC),
  UNIQUE INDEX `CPF_UNIQUE` (`CPF` ASC),
  INDEX `fk_Pessoa_Cidade1_idx` (`NaturalidadeID` ASC),
  INDEX `fk_Pessoa_Pessoa1_idx` (`Pessoa_idPessoa` ASC),
  INDEX `PessoaDataNascimento` USING BTREE (`DataNascimento` ASC),
  CONSTRAINT `fk_Pessoa_EmissorRG1`
    FOREIGN KEY (`idEmissorRG`)
    REFERENCES `mydb`.`EmissorRG` (`idEmissorRG`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pessoa_Cidade1`
    FOREIGN KEY (`NaturalidadeID`)
    REFERENCES `mydb`.`Cidade` (`idCidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pessoa_Pessoa1`
    FOREIGN KEY (`Pessoa_idPessoa`)
    REFERENCES `mydb`.`Pessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TipoTelefone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`TipoTelefone` ;

CREATE TABLE IF NOT EXISTS `mydb`.`TipoTelefone` (
  `idTipoTelefone` INT NOT NULL AUTO_INCREMENT,
  `TipoTelefone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTipoTelefone`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Telefone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Telefone` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Telefone` (
  `idTelefone` INT NOT NULL AUTO_INCREMENT,
  `NumeroTelefone` VARCHAR(45) NOT NULL,
  `Pessoa_id` INT NOT NULL,
  `Comercial` TINYINT NULL,
  `TipoTelefone_idTipoTelefone` INT NOT NULL,
  PRIMARY KEY (`idTelefone`),
  INDEX `fk_Telefone_Pessoa_idx` (`Pessoa_id` ASC),
  INDEX `fk_Telefone_TipoTelefone1_idx` (`TipoTelefone_idTipoTelefone` ASC),
  CONSTRAINT `fk_Telefone_Pessoa`
    FOREIGN KEY (`Pessoa_id`)
    REFERENCES `mydb`.`Pessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Telefone_TipoTelefone1`
    FOREIGN KEY (`TipoTelefone_idTipoTelefone`)
    REFERENCES `mydb`.`TipoTelefone` (`idTipoTelefone`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Tipo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Tipo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Tipo` (
  `TipoID` INT NOT NULL AUTO_INCREMENT,
  `TipoEndereco` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`TipoID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Endereco` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Endereco` (
  `IdEndereco` INT NOT NULL AUTO_INCREMENT,
  `Pessoa_id` INT NOT NULL,
  `Rua` VARCHAR(200) NOT NULL,
  `NumeroEndereco` INT NULL,
  `CEP` INT NOT NULL,
  `Bairro` VARCHAR(100) NOT NULL,
  `Complemento` VARCHAR(500) NULL,
  `Cidade_idCidade` INT NOT NULL,
  `table1_TipoID` INT NOT NULL,
  INDEX `fk_Endereco_Pessoa1_idx` (`Pessoa_id` ASC),
  PRIMARY KEY (`IdEndereco`),
  INDEX `fk_Endereco_Cidade1_idx` (`Cidade_idCidade` ASC),
  INDEX `fk_Endereco_table11_idx` (`table1_TipoID` ASC),
  CONSTRAINT `fk_Endereco_Pessoa1`
    FOREIGN KEY (`Pessoa_id`)
    REFERENCES `mydb`.`Pessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Endereco_Cidade1`
    FOREIGN KEY (`Cidade_idCidade`)
    REFERENCES `mydb`.`Cidade` (`idCidade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Endereco_table11`
    FOREIGN KEY (`table1_TipoID`)
    REFERENCES `mydb`.`Tipo` (`TipoID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`NecessidadesEspeciais`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`NecessidadesEspeciais` ;

CREATE TABLE IF NOT EXISTS `mydb`.`NecessidadesEspeciais` (
  `idNecessidadesEspeciais` INT NOT NULL AUTO_INCREMENT,
  `Descricao` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`idNecessidadesEspeciais`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Escolaridade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Escolaridade` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Escolaridade` (
  `idEscolaridade` INT NOT NULL AUTO_INCREMENT,
  `Descricao` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`idEscolaridade`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ProcessoSeletivo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ProcessoSeletivo` ;

CREATE TABLE IF NOT EXISTS `mydb`.`ProcessoSeletivo` (
  `idProcessoSeletivo` INT NOT NULL AUTO_INCREMENT,
  `DataInicio` DATETIME NOT NULL,
  `DataFim` DATETIME NOT NULL,
  `Ativo` TINYINT NOT NULL,
  `Nome` VARCHAR(45) NOT NULL,
  `Descricao` TEXT NULL,
  PRIMARY KEY (`idProcessoSeletivo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Usuario` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Usuario` (
  `Pessoa_idPessoa` INT NOT NULL,
  `Usuario` VARCHAR(100) NOT NULL,
  `Senha` CHAR(64) NOT NULL,
  `Email` VARCHAR(150) NOT NULL,
  `DataCadastro` DATETIME NOT NULL,
  `DataAtualizacao` DATETIME NULL,
  `Ativo` TINYINT NOT NULL,
  INDEX `fk_Cadastro_Pessoa1_idx` (`Pessoa_idPessoa` ASC),
  PRIMARY KEY (`Pessoa_idPessoa`),
  INDEX `IndexDataCadastro` USING BTREE (`DataCadastro` ASC),
  CONSTRAINT `fk_Cadastro_Pessoa1`
    FOREIGN KEY (`Pessoa_idPessoa`)
    REFERENCES `mydb`.`Pessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Cursos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Cursos` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Cursos` (
  `idCursos` INT NOT NULL AUTO_INCREMENT,
  `Nome` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`idCursos`),
  INDEX `IndexCursos` USING BTREE (`Nome` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Cotas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Cotas` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Cotas` (
  `idCotas` INT NOT NULL AUTO_INCREMENT,
  `Descricao` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`idCotas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Inscricao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Inscricao` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Inscricao` (
  `idInscricao` INT ZEROFILL NOT NULL,
  `ProcessoSeletivo_idProcessoSeletivo` INT NOT NULL,
  `Usuario_Pessoa_idPessoa` INT NOT NULL,
  `DataPagamento` DATE NULL,
  `Pago` TINYINT NULL,
  `PrimeiraOpcao` INT NOT NULL,
  `SegundaOpcao` INT NULL,
  `DataInscricao` DATETIME NOT NULL,
  `Cotas_idCotas` INT NULL,
  PRIMARY KEY (`idInscricao`),
  INDEX `fk_Pessoa_has_ProcessoSeletivo_ProcessoSeletivo1_idx` (`ProcessoSeletivo_idProcessoSeletivo` ASC),
  INDEX `fk_Pessoa_has_ProcessoSeletivo_Usuario1_idx` (`Usuario_Pessoa_idPessoa` ASC),
  INDEX `fk_Inscricao_Cursos1_idx` (`PrimeiraOpcao` ASC),
  INDEX `fk_Inscricao_Cursos2_idx` (`SegundaOpcao` ASC),
  INDEX `fk_Inscricao_Cotas1_idx` (`Cotas_idCotas` ASC),
  CONSTRAINT `fk_Pessoa_has_ProcessoSeletivo_ProcessoSeletivo1`
    FOREIGN KEY (`ProcessoSeletivo_idProcessoSeletivo`)
    REFERENCES `mydb`.`ProcessoSeletivo` (`idProcessoSeletivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pessoa_has_ProcessoSeletivo_Usuario1`
    FOREIGN KEY (`Usuario_Pessoa_idPessoa`)
    REFERENCES `mydb`.`Usuario` (`Pessoa_idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Inscricao_Cursos1`
    FOREIGN KEY (`PrimeiraOpcao`)
    REFERENCES `mydb`.`Cursos` (`idCursos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Inscricao_Cursos2`
    FOREIGN KEY (`SegundaOpcao`)
    REFERENCES `mydb`.`Cursos` (`idCursos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Inscricao_Cotas1`
    FOREIGN KEY (`Cotas_idCotas`)
    REFERENCES `mydb`.`Cotas` (`idCotas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pessoa_Escolaridade`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Pessoa_Escolaridade` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Pessoa_Escolaridade` (
  `Pessoa_idPessoa` INT NOT NULL,
  `Escolaridade_idEscolaridade` INT NOT NULL,
  `Grau_idGrau` INT NOT NULL,
  PRIMARY KEY (`Pessoa_idPessoa`, `Escolaridade_idEscolaridade`),
  INDEX `fk_Pessoa_has_Escolaridade_Escolaridade1_idx` (`Escolaridade_idEscolaridade` ASC),
  INDEX `fk_Pessoa_has_Escolaridade_Pessoa1_idx` (`Pessoa_idPessoa` ASC),
  CONSTRAINT `fk_Pessoa_has_Escolaridade_Pessoa1`
    FOREIGN KEY (`Pessoa_idPessoa`)
    REFERENCES `mydb`.`Pessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pessoa_has_Escolaridade_Escolaridade1`
    FOREIGN KEY (`Escolaridade_idEscolaridade`)
    REFERENCES `mydb`.`Escolaridade` (`idEscolaridade`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Notificacoes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Notificacoes` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Notificacoes` (
  `idNotificacoes` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(45) NULL,
  PRIMARY KEY (`idNotificacoes`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Usuario_has_Notificacoes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Usuario_has_Notificacoes` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Usuario_has_Notificacoes` (
  `Usuario_Pessoa_idPessoa` INT NOT NULL,
  `table1_NotificacoesID` INT NOT NULL,
  PRIMARY KEY (`Usuario_Pessoa_idPessoa`, `table1_NotificacoesID`),
  INDEX `fk_Usuario_has_table1_table11_idx` (`table1_NotificacoesID` ASC),
  INDEX `fk_Usuario_has_table1_Usuario1_idx` (`Usuario_Pessoa_idPessoa` ASC),
  CONSTRAINT `fk_Usuario_has_table1_Usuario1`
    FOREIGN KEY (`Usuario_Pessoa_idPessoa`)
    REFERENCES `mydb`.`Usuario` (`Pessoa_idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_has_table1_table11`
    FOREIGN KEY (`table1_NotificacoesID`)
    REFERENCES `mydb`.`Notificacoes` (`idNotificacoes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Pessoa_has_NecessidadesEspeciais`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Pessoa_has_NecessidadesEspeciais` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Pessoa_has_NecessidadesEspeciais` (
  `Pessoa_idPessoa` INT NOT NULL,
  `NecessidadesEspeciais_idNecessidadesEspeciais` INT NOT NULL,
  `Permanente` TINYINT NOT NULL,
  `Observacao` TEXT NULL,
  PRIMARY KEY (`Pessoa_idPessoa`, `NecessidadesEspeciais_idNecessidadesEspeciais`),
  INDEX `fk_Pessoa_has_NecessidadesEspeciais_NecessidadesEspeciais1_idx` (`NecessidadesEspeciais_idNecessidadesEspeciais` ASC),
  INDEX `fk_Pessoa_has_NecessidadesEspeciais_Pessoa1_idx` (`Pessoa_idPessoa` ASC),
  CONSTRAINT `fk_Pessoa_has_NecessidadesEspeciais_Pessoa1`
    FOREIGN KEY (`Pessoa_idPessoa`)
    REFERENCES `mydb`.`Pessoa` (`idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pessoa_has_NecessidadesEspeciais_NecessidadesEspeciais1`
    FOREIGN KEY (`NecessidadesEspeciais_idNecessidadesEspeciais`)
    REFERENCES `mydb`.`NecessidadesEspeciais` (`idNecessidadesEspeciais`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Comissao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Comissao` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Comissao` (
  `Usuario_Pessoa_idPessoa` INT NOT NULL,
  `ProcessoSeletivo_idProcessoSeletivo` INT NOT NULL,
  PRIMARY KEY (`Usuario_Pessoa_idPessoa`, `ProcessoSeletivo_idProcessoSeletivo`),
  INDEX `fk_Usuario_has_ProcessoSeletivo_ProcessoSeletivo1_idx` (`ProcessoSeletivo_idProcessoSeletivo` ASC),
  INDEX `fk_Usuario_has_ProcessoSeletivo_Usuario1_idx` (`Usuario_Pessoa_idPessoa` ASC),
  CONSTRAINT `fk_Usuario_has_ProcessoSeletivo_Usuario1`
    FOREIGN KEY (`Usuario_Pessoa_idPessoa`)
    REFERENCES `mydb`.`Usuario` (`Pessoa_idPessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_has_ProcessoSeletivo_ProcessoSeletivo1`
    FOREIGN KEY (`ProcessoSeletivo_idProcessoSeletivo`)
    REFERENCES `mydb`.`ProcessoSeletivo` (`idProcessoSeletivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Isencao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Isencao` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Isencao` (
  `Inscricao_idInscricao` INT ZEROFILL NOT NULL,
  `Motivo` TEXT NOT NULL,
  `Homologado` TINYINT NOT NULL,
  `Comissao_Usuario_Pessoa_idPessoa` INT NOT NULL,
  `Comissao_ProcessoSeletivo_idProcessoSeletivo` INT NOT NULL,
  INDEX `fk_table1_Inscricao1_idx` (`Inscricao_idInscricao` ASC),
  INDEX `fk_Isencao_Comissao1_idx` (`Comissao_Usuario_Pessoa_idPessoa` ASC, `Comissao_ProcessoSeletivo_idProcessoSeletivo` ASC),
  CONSTRAINT `fk_table1_Inscricao1`
    FOREIGN KEY (`Inscricao_idInscricao`)
    REFERENCES `mydb`.`Inscricao` (`idInscricao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Isencao_Comissao1`
    FOREIGN KEY (`Comissao_Usuario_Pessoa_idPessoa` , `Comissao_ProcessoSeletivo_idProcessoSeletivo`)
    REFERENCES `mydb`.`Comissao` (`Usuario_Pessoa_idPessoa` , `ProcessoSeletivo_idProcessoSeletivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ProcessoSeletivo_has_Cotas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`ProcessoSeletivo_has_Cotas` ;

CREATE TABLE IF NOT EXISTS `mydb`.`ProcessoSeletivo_has_Cotas` (
  `ProcessoSeletivo_idProcessoSeletivo` INT NOT NULL,
  `Cotas_idCotas` INT NOT NULL,
  `Vagas` INT NOT NULL,
  PRIMARY KEY (`ProcessoSeletivo_idProcessoSeletivo`, `Cotas_idCotas`),
  INDEX `fk_ProcessoSeletivo_has_Cotas_Cotas1_idx` (`Cotas_idCotas` ASC),
  INDEX `fk_ProcessoSeletivo_has_Cotas_ProcessoSeletivo1_idx` (`ProcessoSeletivo_idProcessoSeletivo` ASC),
  CONSTRAINT `fk_ProcessoSeletivo_has_Cotas_ProcessoSeletivo1`
    FOREIGN KEY (`ProcessoSeletivo_idProcessoSeletivo`)
    REFERENCES `mydb`.`ProcessoSeletivo` (`idProcessoSeletivo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ProcessoSeletivo_has_Cotas_Cotas1`
    FOREIGN KEY (`Cotas_idCotas`)
    REFERENCES `mydb`.`Cotas` (`idCotas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `mydb` ;

-- -----------------------------------------------------
-- Placeholder table for view `mydb`.`ViewPessoaDados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ViewPessoaDados` (`idPessoa` INT, `Nome` INT, `DataNascimento` INT, `RG` INT, `idEmissorRG` INT, `CPF` INT, `Sexo` INT, `NomePai` INT, `NomeMae` INT, `Passaporte` INT, `NaturalidadeID` INT, `Pessoa_idPessoa` INT, `Rua` INT, `NumeroEndereco` INT, `CEP` INT, `Bairro` INT, `Complemento` INT, `NomeCidade` INT, `NomeEstado` INT, `NomePais` INT, `NumeroTelefone` INT, `Comercial` INT, `Email` INT, `DataCadastro` INT);

-- -----------------------------------------------------
-- procedure GetAllProducts
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`GetAllProducts`;

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE GetAllProducts()
BEGIN
	SELECT * FROM products;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure RIPNarizdoLeo
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`RIPNarizdoLeo`;

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE RIPNarizdoLeo()
BEGIN
	SELECT * FROM products;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure NOme
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`NOme`;

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE NOme()
BEGIN
	SELECT * FROM products;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure RelacaoCandidatoVaga
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`RelacaoCandidatoVaga`;

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE RelacaoCandidatoVaga(IN cursos INT)
BEGIN

	SELECT COUNT(*) FROM Inscricao 
    WHERE (Inscricao.PrimeiraOpcao = cursos AND Inscricao.Pago = 1)
    OR (Inscricao.SegundaOpcao = cursos AND Inscricao.Pago = 1);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure InsertPessoa
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`InsertPessoa`;

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE InsertPessoa(IN cursos INT)
BEGIN

	SELECT COUNT(*) FROM Inscricao 
    WHERE (Inscricao.PrimeiraOpcao = cursos AND Inscricao.Pago = 1)
    OR (Inscricao.SegundaOpcao = cursos AND Inscricao.Pago = 1);

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure InsertPessoaContaAtomico
-- -----------------------------------------------------

USE `mydb`;
DROP procedure IF EXISTS `mydb`.`InsertPessoaContaAtomico`;

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE InsertPessoaContaAtomico(IN Nome VARCHAR(200), 
										  IN DataNascimento DATE, 
                                          IN RG VARCHAR(15), 
                                          IN idEmissorRG INT, 
                                          IN SuperCPF CHAR(15),
                                          IN Sexo VARCHAR(45),
                                          IN NomePai VARCHAR(200),
                                          IN NomeMae VARCHAR(200),
                                          IN Passaporte VARCHAR(50),
                                          IN NaturalidadeID INT, 
                                          IN Usuario VARCHAR(100), 
                                          IN Senha CHAR(64), 
                                          IN Email VARCHAR(150),
                                          IN NumeroTelefone VARCHAR(45),
                                          IN TipoTelefone VARCHAR(45),
                                          IN Rua VARCHAR(200),
                                          IN CEP INT,
                                          IN Bairro VARCHAR(100),
                                          IN Tipo INT,
                                          IN Cidade INT
                                          )
BEGIN
	
    DECLARE pessoaid INT;
	DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
		ROLLBACK;
    END;
    START TRANSACTION;
		 
		 INSERT INTO Pessoa (Nome, DataNascimento, RG, idEmissorRG, CPF, Sexo, NomePai, NomeMae, Passaporte, NaturalidadeID) VALUES
         (Nome, DataNascimento, RG, idEmissorRG, SuperCPF, Sexo, NomePai, NomeMae, Passaporte, NaturalidadeID);
         
         SET pessoaid = (SELECT idPessoa FROM Pessoa WHERE Pessoa.CPF = SuperCPF);
         INSERT INTO Telefone (NumeroTelefone, Pessoa_id, TipoTelefone_idTipoTelefone) VALUES
         (NumeroTelefone, pessoaid ,TipoTelefone);
         INSERT INTO Endereco (Pessoa_id, Rua, CEP, Bairro, table1_TipoID, Cidade_idCidade) VALUES
         (pessoaid, Rua, CEP, Bairro, Tipo, Cidade);
         INSERT INTO Usuario (Pessoa_idPessoa, Usuario, Senha, Email, DataCadastro, Ativo) VALUES
         (pessoaid, Usuario, Senha, Email, NOW(), 1);
    COMMIT;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `mydb`.`ViewPessoaDados`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `mydb`.`ViewPessoaDados` ;
DROP TABLE IF EXISTS `mydb`.`ViewPessoaDados`;
USE `mydb`;
CREATE  OR REPLACE VIEW `ViewPessoaDados` AS SELECT Pessoa.*, Endereco.Rua, Endereco.NumeroEndereco,
Endereco.CEP, Endereco.Bairro, Endereco.Complemento, Cidade.NomeCidade, Estado.NomeEstado
, Pais.NomePais, Telefone.NumeroTelefone, Telefone.Comercial, Usuario.Email,
Usuario.DataCadastro FROM Pessoa 
LEFT JOIN Endereco ON Pessoa.idPessoa = Endereco.Pessoa_id
LEFT JOIN Cidade ON Endereco.Cidade_idCidade = Cidade.idCidade
LEFT JOIN Estado ON Cidade.Estado_idEstado = Estado.idEstado
LEFT JOIN Pais ON Estado.Pais_idPais = Pais.idPais
LEFT JOIN Telefone ON Pessoa.idPessoa = Telefone.Pessoa_id
LEFT JOIN Usuario On Usuario.Pessoa_idPessoa = Pessoa.idPessoa
;
USE `mydb`;

DELIMITER $$

USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Inscricao_BEFORE_INSERT` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Inscricao_BEFORE_INSERT` BEFORE INSERT ON `Inscricao` FOR EACH ROW
BEGIN
	IF PrimeiraOpcao = SegundaOpcao THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 
        'Ocorreu um erro. Primeira Opção e Segunda não podem ser iguais';
	END IF;
END$$


USE `mydb`$$
DROP TRIGGER IF EXISTS `mydb`.`Isencao_AFTER_UPDATE` $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Isencao_AFTER_UPDATE` AFTER UPDATE ON `Isencao` FOR EACH ROW
BEGIN
	IF Isencao.Homologado <> 0 THEN
		UPDATE Inscricao.Pago SET pago = 1 WHERE Inscricao.idInscricao = Isencao.Inscricao_idInscricao;
	END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
